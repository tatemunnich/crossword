{"version":3,"sources":["components/Square.js","components/Board.js","components/Menu.js","components/Panel.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Square","className","this","props","label","tabIndex","index","value","id","onKeyDown","ref","innerRef","React","Component","forwardRef","Board","squareRefs","i","BOARD_SIZE","push","createRef","state","key","squares","Math","floor","labels","rows","cols","j","renderSquare","Menu","onClick","PanelA","PanelB","PanelC","for","name","htmlFor","PanelD","type","PanelE","Panel","panelContents","panelControl","Game","handleKeyDown","e","input","parseInt","target","attributes","row","column","getCurrentSquares","toUpperCase","toLowerCase","length","addHistory","focusSquare","getForwardIndex","symmetrical","preventDefault","back","getBackwardIndex","includes","handleMenuClick","undo","reset","setState","Array","fill","boardRef","history","stepNumber","isAcross","array","map","_","colIndex","current","JSON","parse","stringify","slice","concat","focus","prevBlack","acrossLabels","getLabelListHelper","transpose_squares","transposeArray","downLabels","toString","acrossWords","word","letter","getWordListHelper","currentIndex","getLabelList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c54e2e2f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"entry\">\r\n                <label className=\"label\">\r\n                    {this.props.label}\r\n                </label>\r\n                <button\r\n                    tabIndex={this.props.index === 0 ? \"auto\" : -1}\r\n                    className={this.props.value === \".\" ? \"black-square\" : \"square\"}\r\n                    id={this.props.index}\r\n                    onKeyDown={this.props.onKeyDown}\r\n                    ref={this.props.innerRef}\r\n                >\r\n                    {this.props.value}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) =>\r\n    <Square\r\n        innerRef={ref}\r\n        {...props}\r\n    />\r\n);","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport {BOARD_SIZE} from \"./Game\";\r\n\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let squareRefs = [];\r\n        for (let i = 0; i<BOARD_SIZE**2; i++) {\r\n            squareRefs.push(React.createRef());\r\n        }\r\n        this.state = {\r\n            squareRefs: squareRefs,\r\n        }\r\n    }\r\n\r\n\r\n    renderSquare(i) {\r\n        return (\r\n        <Square\r\n            key={i}\r\n            onKeyDown={this.props.onKeyDown}\r\n            value={this.props.squares[Math.floor(i/BOARD_SIZE)][i%BOARD_SIZE]}\r\n            label={this.props.labels[Math.floor(i/BOARD_SIZE)][i%BOARD_SIZE]}\r\n            index={i}\r\n            ref={this.state.squareRefs[i]}\r\n        />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let rows = [];\r\n\r\n        for (let i = 0; i < BOARD_SIZE; i++) {\r\n            let cols = [];\r\n            for (let j = 0; j < BOARD_SIZE; j++) {\r\n                cols.push(this.renderSquare(BOARD_SIZE*i+j))\r\n            }\r\n            rows.push(\r\n                <div className=\"board-row\" key={i}>\r\n                    {cols}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return rows;\r\n    }\r\n}\r\n\r\nexport default Board","import React from \"react\";\r\n\r\n/**\r\n * Class that represents the top menu.\r\n */\r\nclass Menu extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"menubar\"}>\r\n                <div className={\"menubar-left\"}>\r\n                    <button className={\"menu-button\"} value={\"A\"} onClick={this.props.onClick}>New</button>\r\n                    <button className={\"menu-button\"} value={\"B\"} onClick={this.props.onClick}>Help</button>\r\n                    <button className={\"menu-button\"} value={\"C\"} onClick={this.props.onClick}>Words</button>\r\n                    <button className={\"menu-button\"} value={\"D\"} onClick={this.props.onClick}>Clues</button>\r\n                    <button className={\"menu-button\"} value={\"E\"} onClick={this.props.onClick}>Export</button>\r\n                    {/*<button className={\"menu-button\"} value={\"F\"} onClick={this.props.onClick}>F</button>*/}\r\n                    {/*<button className={\"menu-button\"} value={\"G\"} onClick={this.props.onClick}>G</button>*/}\r\n                    {/*<button className={\"menu-button\"} value={\"H\"} onClick={this.props.onClick}>H</button>*/}\r\n                </div>\r\n                <div className={\"menubar-right\"}>\r\n                    <button className={\"menu-button\"} value=\"undo\" onClick={this.props.onClick}>Undo</button>\r\n                    <button className={\"menu-button\"} value=\"reset\" onClick={this.props.onClick}>Reset</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React from \"react\";\r\n\r\nclass Panel extends React.Component {\r\n    render() {\r\n        const panelControl = this.props.panelControl;\r\n        let panelContents;\r\n        if (panelControl === \"A\") {\r\n            panelContents =  <PanelA />\r\n        }\r\n        else if (panelControl === \"B\") {\r\n            panelContents = <PanelB />\r\n        }\r\n        else if (panelControl === \"C\") {\r\n            panelContents = <PanelC />\r\n        }\r\n        else if (panelControl === \"D\") {\r\n            panelContents = <PanelD />\r\n        }\r\n        else if (panelControl === \"E\") {\r\n            panelContents = <PanelE />\r\n        }\r\n        // else if (panelControl === \"F\") {\r\n        //     panelContents = <PanelF />\r\n        // }\r\n        // else if (panelControl === \"G\") {\r\n        //     panelContents = <PanelG />\r\n        // }\r\n        // else if (panelControl === \"H\") {\r\n        //     panelContents = <PanelH />\r\n        // }\r\n        return <div>\r\n            {panelContents}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction PanelA() {\r\n    return (\r\n        <div className={\"panel-contents\"}>\r\n            <h1>New Puzzle</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PanelB() {\r\n    return (\r\n        <div className={\"panel-contents\"}>\r\n            <h1>Help</h1>\r\n            <p>Click on a square to enter a letter</p>\r\n            <p>Move around the board with the arrow keys</p>\r\n            <p>To toggle a black square, select the square and press the \".\" key</p>\r\n            <p>For help creating words, click the \"Words\" button in the menu</p>\r\n            <p>To create clues, click the \"Clues\" button in the menu</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PanelC() {\r\n    return (\r\n        <div className={\"panel-contents\"}>\r\n            <h1>Word Suggestions</h1>\r\n            <p>To view word suggestions, select a square and view the words that fit</p>\r\n            <div className={\"suggestion-box\"}>\r\n                <label for={\"across\"}>1a: </label>\r\n                <select name={\"across\"} id={\"across\"}>\r\n                    <option value={\"Apple\"}>Peak</option>\r\n                    <option value={\"Orange\"}>Pear</option>\r\n                    <option value={\"Pear\"}>Pool</option>\r\n                </select>\r\n            </div>\r\n            <div className={\"suggestion-box\"}>\r\n                <label htmlFor={\"down\"}>1d: </label>\r\n                <select name={\"down\"} id={\"down\"}>\r\n                    <option value={\"Apple\"}>Peak</option>\r\n                    <option value={\"Orange\"}>Pear</option>\r\n                    <option value={\"Pear\"}>Pool</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PanelD() {\r\n    return (\r\n        <div className={\"panel-contents\"}>\r\n            <h1>Clues</h1>\r\n            <p>To create a clue, select a word in the puzzle, and choose one of the suggested clues,\r\n            or create your own!</p>\r\n            <div className={\"suggestion-box\"}>\r\n                <label for={\"across\"}>1a: </label>\r\n                <input type={\"text\"} id={\"across\"} name={\"across\"}>\r\n                </input>\r\n            </div>\r\n            <div className={\"suggestion-box\"}>\r\n                <label htmlFor={\"down\"}>1d: </label>\r\n                <input type={\"text\"} id={\"down\"} name={\"down\"}>\r\n                </input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PanelE() {\r\n    return (\r\n        <div className={\"panel-contents\"}>\r\n            <h1>Export</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n// function PanelF() {\r\n//     return (\r\n//         <p>This is panel F.</p>\r\n//     )\r\n// }\r\n//\r\n// function PanelG() {\r\n//     return (\r\n//         <p>This is panel G.</p>\r\n//     )\r\n// }\r\n//\r\n// function PanelH() {\r\n//     return (\r\n//         <p>This is panel H.</p>\r\n//     )\r\n// }\r\n\r\nexport default Panel","import React from 'react';\r\nimport Board from \"./Board\";\r\nimport Menu from \"./Menu\";\r\nimport Panel from \"./Panel\";\r\n\r\nexport const BOARD_SIZE = 15;\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let squares = [];\r\n        for (let i = 0; i<BOARD_SIZE; i++) {\r\n            squares.push(Array(BOARD_SIZE).fill(\" \"));\r\n        }\r\n        const boardRef = React.createRef();\r\n        this.state = {\r\n            history: [{\r\n                squares: squares,\r\n            }],\r\n            stepNumber: 0,\r\n            isAcross: true,\r\n            symmetrical: true,\r\n            panelControl: \"B\",\r\n            boardRef: boardRef,\r\n        }\r\n    }\r\n\r\n    transposeArray(array) {\r\n        return array[0].map((_, colIndex) => array.map(row => row[colIndex]))\r\n    }\r\n\r\n    getCurrentSquares() {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        return JSON.parse(JSON.stringify(current.squares.slice())); // creates a deep copy\r\n    }\r\n\r\n    addHistory(squares) {\r\n        const history = this.state.history;\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n        });\r\n    }\r\n\r\n    focusSquare(i) {\r\n        if (i<BOARD_SIZE**2) {\r\n            const field = this.state.boardRef.current.state.squareRefs[i].current;\r\n            field.focus();\r\n        }\r\n    }\r\n\r\n    getLabelListHelper(squares) {\r\n        let labels = [];\r\n        for (let i = 0; i<BOARD_SIZE; i++) {\r\n            labels.push(Array(BOARD_SIZE).fill(\"\"));\r\n        }\r\n\r\n        for (let i = 0; i<BOARD_SIZE; i++) {\r\n            let prevBlack = true;\r\n            for (let j = 0; j<BOARD_SIZE; j++) {\r\n                const letter = squares[i][j];\r\n                if (letter === '.') {\r\n                    prevBlack = true;\r\n                } else if (prevBlack) {\r\n                    labels[i][j]='L';\r\n                    prevBlack = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return labels;\r\n    }\r\n\r\n    getLabelList(squares) {\r\n        let acrossLabels = this.getLabelListHelper(squares);\r\n        const transpose_squares = this.transposeArray(squares);\r\n        const downLabels = this.transposeArray(this.getLabelListHelper(transpose_squares));\r\n\r\n        let label = 1;\r\n        for (let i =0; i<BOARD_SIZE; i++) {\r\n            for (let j=0; j<BOARD_SIZE; j++) {\r\n                if (downLabels[i][j]==='L' || acrossLabels[i][j]==='L') {\r\n                    acrossLabels[i][j]=label.toString();\r\n                    label = label + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return acrossLabels;\r\n    }\r\n\r\n    getWordListHelper(squares) {\r\n        const acrossWords = [];\r\n        for (let row of squares) {\r\n            let word = \"\";\r\n            for (let letter of row) {\r\n                if (letter !== \".\") {\r\n                    word = word + letter;\r\n                } else if (word) {\r\n                    acrossWords.push(word);\r\n                    word = \"\";\r\n                }\r\n            }\r\n            if (word) {\r\n                acrossWords.push(word);\r\n                word = \"\";\r\n            }\r\n        }\r\n        return (acrossWords);\r\n    }\r\n\r\n    getWordList(squares) {\r\n        const transpose_squares = this.transposeArray(squares);\r\n        return this.getWordListHelper(squares).concat(this.getWordListHelper(transpose_squares));\r\n    }\r\n\r\n    getForwardIndex(currentIndex) {\r\n        if (this.state.isAcross && currentIndex%BOARD_SIZE!==BOARD_SIZE-1) {\r\n            return currentIndex+1;\r\n        } else if (!this.state.isAcross) {\r\n            return currentIndex + BOARD_SIZE;\r\n        } else {\r\n            return currentIndex;\r\n        }\r\n    }\r\n\r\n    getBackwardIndex(currentIndex) {\r\n        if (this.state.isAcross && currentIndex%BOARD_SIZE!==0) {\r\n           return currentIndex-1;\r\n        } else if (!this.state.isAcross) {\r\n            return currentIndex-BOARD_SIZE;\r\n        } else {\r\n            return currentIndex;\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        const input = e.key;\r\n        const index = parseInt(e.target.attributes.id.value);\r\n        const row = Math.floor(index/BOARD_SIZE);\r\n        const column = index % BOARD_SIZE\r\n        const squares = this.getCurrentSquares();\r\n\r\n        if ((input.toUpperCase() !== input.toLowerCase() && input.length === 1 )) { // if letter\r\n            squares[row][column] = input.toUpperCase();\r\n            this.addHistory(squares);\r\n            this.focusSquare(this.getForwardIndex(index));\r\n\r\n        } else if (input === '.') {\r\n            squares[row][column] === '.' ? squares[row][column] = ' ' : squares[row][column] = '.';\r\n            if (this.state.symmetrical && !(BOARD_SIZE%2===1 && row===Math.floor(BOARD_SIZE/2) && column===row)) { // don't mirror middle square\r\n                // TODO: fix problems when toggling between symmetrical and not\r\n                squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] === '.' ?\r\n                    squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] = ' ' :\r\n                    squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] = '.';\r\n            }\r\n            this.addHistory(squares);\r\n\r\n        } else if (input === 'Backspace') {\r\n            e.preventDefault();\r\n            if (squares[row][column] === \" \") {\r\n                const back = this.getBackwardIndex(index);\r\n                squares[Math.floor(back/BOARD_SIZE)][back%BOARD_SIZE] = \" \";\r\n                this.focusSquare(back);\r\n                this.addHistory(squares);\r\n            } else if (squares[row][column] === '.' && this.state.symmetrical && !(BOARD_SIZE%2===1 && row===Math.floor(BOARD_SIZE/2) && column===row)) {\r\n                squares[row][column] = \" \";\r\n                squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] === '.' ?\r\n                    squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] = ' ' :\r\n                    squares[BOARD_SIZE-row-1][BOARD_SIZE-column-1] = '.';\r\n                this.addHistory(squares);\r\n            } else {\r\n                squares[row][column] = \" \";\r\n                this.addHistory(squares);\r\n            }\r\n\r\n        } else if (input === \" \") {\r\n            if (squares[row][column] === \" \") {\r\n                this.focusSquare(this.getForwardIndex(index));\r\n            } else {\r\n                squares[row][column] = \" \";\r\n                this.focusSquare(this.getForwardIndex(index));\r\n                this.addHistory(squares);\r\n            }\r\n\r\n        } else if (['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'].includes(input)) { // an arrow key was pressed\r\n            this.focusSquare(index+1)\r\n        }\r\n    }\r\n\r\n    undo() {\r\n        const stepNumber = this.state.stepNumber;\r\n        const history = this.state.history.slice();\r\n\r\n        if (stepNumber > 0) {\r\n            this.setState({\r\n                stepNumber: stepNumber - 1,\r\n                history: history.slice(0, history.length-1),\r\n            })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        const history = this.state.history.slice();\r\n        this.setState({\r\n            stepNumber: 0,\r\n            history: [history[0]],\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Function for handling menu button clicks.\r\n     * @param e\r\n     */\r\n    handleMenuClick = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value===\"undo\") {\r\n            this.undo();\r\n        } else if (value===\"reset\") {\r\n            this.reset();\r\n        } else {\r\n            this.setState({panelControl: value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n\r\n        return (\r\n            <div className=\"body\">\r\n                <div className={\"menu\"}>\r\n                    <Menu\r\n                        onClick={this.handleMenuClick}\r\n                    />\r\n                </div>\r\n                <div className={\"game\"}>\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            squares={current.squares}\r\n                            labels={this.getLabelList(current.squares)}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            ref={this.state.boardRef}\r\n                        />\r\n                    </div>\r\n                    <div className={\"panel\"}>\r\n                        <Panel panelControl={this.state.panelControl}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './App.css';\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}